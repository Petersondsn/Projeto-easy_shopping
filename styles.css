* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Oswald', sans-serif;
    font-weight: 400; /* Usar nesta posição todas as tags que são comuns em todo o programa */ 
    color: #5D5D7D; /* Usar nesta posição todas as tags que são comuns em todo o programa */
}

.wrapper {
    height: 100vh; /*A tela tem 100vh ao todo. Através deste comando eu estou determinando que ela ocupe toda a tela em altura. Da mesma forma em width, onde determino que ocupe todos os 100 pedacinhos da tela em largura. */
    width: 100vw;
}

.container-left {
    display: inline-block;
    width: 60%; /* Através deste comando, estou determinando que esta classe ocupe 60% da tela */
    padding: 136px;
    margin-top: 20%;
}

.container-right {
    display: inline-block;
    background-color: rgba(93, 93, 125, 0.16); /* Através deste comando, conseguimos colocar a cor com a transparência, convertendo a cor em hexadecimal para rgba, onde o "a" é a opacidade. */
    height: 100vh;
    width: 40%; /* Através deste comando, estou determinando que esta classe ocupe 40% da tela */
    position: absolute; /* Ajustar a posição do conjunto para que ele se mantenha corretamente. O absolute se a tela mexer ele segue junto. Este é o ideal para o noso caso. */ 
}

img {
    position: relative;
    top: 25%;
    right: 130px;
}

h1 {
    font-size: 70px;
    line-height: 80px;
    width: 368px;
   
}

p {
    font-size: 28px;
    line-height: 48px;
    opacity: 0.6;
    margin-top: 15px 0; /* 2 valores ele aplica em cima e em baixo */
    width: 540px;
}

button {
    width: 269px;
    height: 62px;
    background: #9499EA;
    box-shadow: 0px 10px 24px rgba(148, 153, 234, 0.0979959);
    border-radius: 30px;
    border: none;
    font-size: 24px;
    line-height: 36px;
    text-align: center;
    color: #FFFFFF;
    cursor: pointer;
}

button:hover {
    opacity: .8;
}

button:active {
    opacity: .5;
}

a {
    font-size: 28px;
    line-height: 41px;
    cursor: pointer;
    margin-right: 41px;
}

a:nth-child(2) {
    opacity: 0.4;
}

a:hover {
    opacity: 0.4;
}

a:active {
    opacity: 0.8;
}

header {
    margin: 24px 0 0 80px;
}

/* Responsividade para Mobile */

/* 
- Precisamos determinar os ajustes para quando mudar a tela de desktop para mobile. Para este caso, utilizamos delimitadores que executarão novos ajustes, a partir do momento que houver a transição do tamanho da tela. Neste caso foi usado o @media screen and (max-width: 1260px). A partir do número menor que 1260 a transição dos ajustes ocorre.
*/

@media screen and (max-width: 1260px) {
    .container-left {
        width: 100%;
        height: 50%;
        padding: 0;
        margin: 0;
    }

    .container-right {
        display: block;
        height: auto;
        width: 100%;
        position: static;
        padding: 40px;
    }

    img {
        position: static;
        max-width: 90%;
    }

    header {
        display: none; /* Retira o header. desaparece o display */
    }

    h1 {

        width: auto;
        margin: 58px 50px 0 50px;
        text-align: center;
        font-weight: 900;
        font-size: 50px;
        line-height: 61px;

color: #515151;
    }

    p {
        margin: 15px 40px; /* 2 valores ele aplica para cima e para baixo e para esquer e direita. */
        width: auto;
        text-align: center;
        font-size: 14px;
        line-height: 24px;
    }

    button { /* Para centralizar o botão, podemos colocar a margem de cima e de baixo com "0" e a da esuqerda e direita como "auto". Devemos também colocar o display como "block" para que funcione. */
        margin: 0 auto;
        display: block;
    }
}

@media screen and (max-width: 380px) {
    .container-left {
        height: 70%;
    }
}

